# Generated by Django 4.2.6 on 2023-10-12 14:45

from django.db import migrations, models

import apps.base.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('currency', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('username', models.CharField(max_length=50, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('password', models.CharField(max_length=200, verbose_name='Password')),
                ('role', models.CharField(choices=[('ANALYST', 'Analyst'), ('USER', 'User'), ('ADMIN', 'Admin')], default=apps.base.enums.Role['USER'], max_length=10, verbose_name='Role')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Balance')),
                ('currency_subscriptions', models.ManyToManyField(related_name='user_subscriptions', to='currency.currency')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
    ]
